name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'corretto'
        
    - name: Run chmod to make gradlew executable
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: AWS IAM 사용자 설정
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: ECR에 로그인
      uses: aws-actions/amazon-ecr-login@v1

    - name: 도커 이미지 빌드
      run: |
        docker build -t wannaeat-server .
        
    - name: 기존 ECR에 업로드된 lastest 태그 이미지 삭제
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          aws ecr batch-delete-image --profile ${{ secrets.IAM_PROFILE_USERNAME }} --repository-name hellodeveloper --image-ids imageTag=latest
          
    - name: EC2에서 ECR에 로그인하기
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          aws ecr get-login-password --profile ${{ secrets.IAM_PROFILE_USERNAME }} --region ${{ secrets.AWS_REGION }} | sudo docker login --username AWS --password-stdin ${{ secrets.ECR_URI }}

    - name: 기존 EC2에서 실행중인 컨테이너 종료
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo docker ps -q | xargs -r docker stop

    - name: 기존 EC2에 존재하는 모든 컨테이너 삭제
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo docker ps -asq | xargs -r docker rm

    - name: 기존 EC2에 저장되어있는 이미지 삭제
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo docker images -q | xargs -r docker rmi
          
    - name: EC2에서 도커에서 사용하지 않는 자원 삭제처리
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo docker system prune -af

    - name: EC2에서 도커 이미지를 가져오기
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo docker pull ${{ secrets.ECR_URI }}

    - name: ECR에서 불러온 이미지를 도커 컴포즈로 실행
      uses: appleboy/ssh-action@master
      env:
          COMPOSE: "/home/ubuntu/wanna-eat-server/docker-compose.yml"
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        envs: APP, COMPOSE
        script: |
          sudo docker compose -f $COMPOSE down
          sudo docker-compose -f $COMPOSE up -d
